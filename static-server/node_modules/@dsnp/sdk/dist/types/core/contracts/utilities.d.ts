export declare type TypedDomainData = {
    name: string;
    version: string;
    chainId: number;
    verifyingContract: string;
    salt: string;
};
export interface TypedData {
    types: Record<string, Array<TypedDataField>>;
    primaryType: string;
    domain: TypedDomainData;
    message: Record<string, unknown>;
}
export declare type TypedMessageDataField = Record<string, unknown>;
export declare type EIP712Signature = {
    r: string;
    s: string;
    v: number;
};
export interface TypedDataField {
    name: string;
    type: string;
}
export declare const createTypedData: (domainData: TypedDomainData, primaryType: string, message: TypedMessageDataField, messageTypes: Record<string, Array<TypedDataField>>) => TypedData;
