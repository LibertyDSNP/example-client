import { DSNPType } from "../messages/messages";
export interface BloomFilterColumnOptions {
    column: string;
    numFilterBytes?: number;
    falsePositiveRate?: number;
    numDistinct?: number;
}
export interface BloomFilterOptions {
    bloomFilters: Array<BloomFilterColumnOptions>;
}
declare type columnName = string;
declare type typing = {
    type: string;
};
export declare type Schema = Record<columnName, typing>;
export declare const BroadcastSchema: {
    dsnpType: {
        type: string;
    };
    contentHash: {
        type: string;
    };
    fromId: {
        type: string;
    };
    url: {
        type: string;
    };
    signature: {
        type: string;
    };
};
export declare const BroadcastBloomFilterOptions: BloomFilterOptions;
export declare const ReplySchema: {
    dsnpType: {
        type: string;
    };
    contentHash: {
        type: string;
    };
    fromId: {
        type: string;
    };
    inReplyTo: {
        type: string;
    };
    url: {
        type: string;
    };
    signature: {
        type: string;
    };
};
export declare const ReplyBloomFilterOptions: {
    bloomFilters: {
        column: string;
    }[];
};
export declare const GraphChangeSchema: {
    dsnpType: {
        type: string;
    };
    fromId: {
        type: string;
    };
    changeType: {
        type: string;
    };
    signature: {
        type: string;
    };
};
export declare const GraphChangeBloomFilterOptions: {
    bloomFilters: {
        column: string;
    }[];
};
export declare const ProfileSchema: {
    dsnpType: {
        type: string;
    };
    fromId: {
        type: string;
    };
    url: {
        type: string;
    };
    signature: {
        type: string;
    };
};
export declare const ProfileBloomFilterOptions: {
    bloomFilters: {
        column: string;
    }[];
};
export declare const ReactionSchema: {
    dsnpType: {
        type: string;
    };
    emoji: {
        type: string;
    };
    fromId: {
        type: string;
    };
    inReplyTo: {
        type: string;
    };
    signature: {
        type: string;
    };
};
export declare const ReactionBloomFilterOptions: {
    bloomFilters: {
        column: string;
    }[];
};
export declare const getSchemaFor: (dsnpType: DSNPType) => Schema;
export declare const getBloomFilterOptionsFor: (dsnpType: DSNPType) => BloomFilterOptions;
export {};
