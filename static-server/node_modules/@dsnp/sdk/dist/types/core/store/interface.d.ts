/// <reference types="node" />
export declare type Content = string | Buffer;
export interface WriteStream {
    write(chunk: unknown, encoding?: string, callback?: (error: Error | null | undefined) => void): boolean;
    write(chunk: unknown, cb?: (error: Error | null | undefined) => void): boolean;
    end(chunk: unknown, cb?: () => void): void;
    end(chunk: unknown, encoding?: string, cb?: () => void): void;
}
export interface ReadStream {
    read(chunk: unknown, size: number): void;
    end(chunk: unknown, cb?: () => void): void;
    end(chunk: unknown, encoding?: string, cb?: () => void): void;
}
export interface WriteStreamCallback {
    (stream: WriteStream): Promise<void>;
}
export interface StoreInterface {
    put: (targetPath: string, content: Content) => Promise<URL>;
    putStream: (targetPath: string, doWriteToStream: WriteStreamCallback) => Promise<URL>;
}
