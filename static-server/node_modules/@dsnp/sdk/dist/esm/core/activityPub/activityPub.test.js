import { create, serialize, isValid } from "./activityPub";
describe("activityPub", () => {
    describe("#create", () => {
        it("returns an activity pub object with the given parameters", () => {
            const activityPub = create({
                attributedTo: "0x0123456789ABCDEF",
                content: "Look at these cats!",
                name: "Some Cats",
                url: "http://placekitten.com",
                inReplyTo: "0x0123456789ABCDEF",
            });
            expect(activityPub).toMatchObject({
                "@context": "https://www.w3.org/ns/activitystreams",
                attributedTo: "0x0123456789ABCDEF",
                content: "Look at these cats!",
                inReplyTo: "0x0123456789ABCDEF",
                name: "Some Cats",
                type: "Note",
                url: "http://placekitten.com",
            });
        });
        it("returns an activity pub object with a valid published timestamp", () => {
            const activityPub = create({
                content: "Look at the time!",
                name: "Time",
            });
            expect(activityPub["published"]).toMatch(/(\d{4})-(\d{2})-(\d{2})T(\d{2}):(\d{2}):(\d{2})/);
        });
    });
    describe("#isValid", () => {
        it("return true for valid activity pub objects with valid published fields", () => {
            const activityPub = {
                "@context": "https://www.w3.org/ns/activitystreams",
                type: "Note",
                url: "http://placekitten.com",
                published: "2015-02-10T15:04:55Z",
            };
            expect(isValid(activityPub)).toBeTruthy();
        });
        it("return true for valid activity pub objects with no published field", () => {
            const activityPub = {
                "@context": "https://www.w3.org/ns/activitystreams",
                type: "Note",
                url: "http://placekitten.com",
            };
            expect(isValid(activityPub)).toBeTruthy();
        });
        it("return false for activity pubs with incorrect published fields", () => {
            const activityPub = {
                "@context": "https://www.w3.org/ns/activitystreams",
                type: "Note",
                url: "http://placekitten.com",
                published: "Yesterday",
            };
            expect(isValid(activityPub)).toBeFalsy();
        });
        it("return false for activity pubs with incorrect contexts fields", () => {
            const activityPub = {
                "@context": "https://www.w3.org/ns/activitystream",
                type: "Note",
                url: "http://placekitten.com",
            };
            expect(isValid(activityPub)).toBeFalsy();
        });
        it("return false for activity pubs with missing types", () => {
            const activityPub = {
                "@context": "https://www.w3.org/ns/activitystream",
                url: "http://placekitten.com",
            };
            expect(isValid(activityPub)).toBeFalsy();
        });
    });
    describe("#validateReply", () => {
        it("return true for valid activity pub objects with an inReplyTo field", () => {
            const activityPub = {
                "@context": "https://www.w3.org/ns/activitystreams",
                type: "Note",
                url: "http://placekitten.com",
                inReplyTo: "dsnp://0123456789ABCDEF/0123456789ABCDEF0123456789ABCDEF0123456789ABCDEF0123456789ABCDEF",
            };
            expect(isValid(activityPub)).toBeTruthy();
        });
        it("return false for activity pubs without an inReplyTo field", () => {
            const activityPub = {
                "@context": "https://www.w3.org/ns/activitystreams",
                type: "Note",
                url: "http://placekitten.com",
                published: "Yesterday",
            };
            expect(isValid(activityPub)).toBeFalsy();
        });
    });
    describe("#isValidProfile", () => {
        it("return true for valid activity pub objects with an inReplyTo field", () => {
            const activityPub = {
                "@context": "https://www.w3.org/ns/activitystreams",
                type: "Person",
                name: "Rose Karr",
                preferredUsername: "rosalinekarr",
            };
            expect(isValid(activityPub)).toBeTruthy();
        });
        it("return false for activity pubs with wrong type", () => {
            const activityPub = {
                "@context": "https://www.w3.org/ns/activitystreams",
                type: "Note",
                url: "http://placekitten.com",
                published: "Yesterday",
            };
            expect(isValid(activityPub)).toBeFalsy();
        });
    });
    describe("#serialize", () => {
        it("returns a serialized version of the activity pub object", () => {
            const sampleActivityPub = {
                "@context": "https://www.w3.org/ns/activitystreams",
                type: "Person",
                id: "https://social.example/alyssa/",
                name: "Alyssa P. Hacker",
                preferredUsername: "alyssa",
            };
            expect(serialize(sampleActivityPub)).toEqual('{"@context":"https://www.w3.org/ns/activitystreams","id":"https://social.example/alyssa/","name":"Alyssa P. Hacker","preferredUsername":"alyssa","type":"Person"}');
        });
    });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWN0aXZpdHlQdWIudGVzdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb3JlL2FjdGl2aXR5UHViL2FjdGl2aXR5UHViLnRlc3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLE1BQU0sRUFBRSxTQUFTLEVBQUUsT0FBTyxFQUFlLE1BQU0sZUFBZSxDQUFDO0FBRXhFLFFBQVEsQ0FBQyxhQUFhLEVBQUUsR0FBRyxFQUFFO0lBQzNCLFFBQVEsQ0FBQyxTQUFTLEVBQUUsR0FBRyxFQUFFO1FBQ3ZCLEVBQUUsQ0FBQywwREFBMEQsRUFBRSxHQUFHLEVBQUU7WUFDbEUsTUFBTSxXQUFXLEdBQUcsTUFBTSxDQUFDO2dCQUN6QixZQUFZLEVBQUUsb0JBQW9CO2dCQUNsQyxPQUFPLEVBQUUscUJBQXFCO2dCQUM5QixJQUFJLEVBQUUsV0FBVztnQkFDakIsR0FBRyxFQUFFLHdCQUF3QjtnQkFDN0IsU0FBUyxFQUFFLG9CQUFvQjthQUNoQyxDQUFDLENBQUM7WUFFSCxNQUFNLENBQUMsV0FBVyxDQUFDLENBQUMsYUFBYSxDQUFDO2dCQUNoQyxVQUFVLEVBQUUsdUNBQXVDO2dCQUNuRCxZQUFZLEVBQUUsb0JBQW9CO2dCQUNsQyxPQUFPLEVBQUUscUJBQXFCO2dCQUM5QixTQUFTLEVBQUUsb0JBQW9CO2dCQUMvQixJQUFJLEVBQUUsV0FBVztnQkFDakIsSUFBSSxFQUFFLE1BQU07Z0JBQ1osR0FBRyxFQUFFLHdCQUF3QjthQUM5QixDQUFDLENBQUM7UUFDTCxDQUFDLENBQUMsQ0FBQztRQUVILEVBQUUsQ0FBQyxpRUFBaUUsRUFBRSxHQUFHLEVBQUU7WUFDekUsTUFBTSxXQUFXLEdBQUcsTUFBTSxDQUFDO2dCQUN6QixPQUFPLEVBQUUsbUJBQW1CO2dCQUM1QixJQUFJLEVBQUUsTUFBTTthQUNiLENBQUMsQ0FBQztZQUVILE1BQU0sQ0FBQyxXQUFXLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxPQUFP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