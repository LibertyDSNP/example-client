var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __asyncValues = (this && this.__asyncValues) || function (o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
};
import { createFile } from "./core/batch";
import { filterIterable, EmptyBatchError } from "./core/utilities";
import { getRandomString } from "./core/utilities/random";
export const createPublication = (messages, opts) => { var messages_1, messages_1_1; return __awaiter(void 0, void 0, void 0, function* () {
    var e_1, _a;
    const filename = getRandomString();
    const { url, hash } = yield createFile(filename, messages, opts);
    let dsnpType;
    try {
        for (messages_1 = __asyncValues(messages); messages_1_1 = yield messages_1.next(), !messages_1_1.done;) {
            const message = messages_1_1.value;
            dsnpType = message.dsnpType;
            break;
        }
    }
    catch (e_1_1) { e_1 = { error: e_1_1 }; }
    finally {
        try {
            if (messages_1_1 && !messages_1_1.done && (_a = messages_1.return)) yield _a.call(messages_1);
        }
        finally { if (e_1) throw e_1.error; }
    }
    if (dsnpType === undefined)
        throw new EmptyBatchError();
    return {
        dsnpType,
        url: url.toString(),
        hash,
    };
}); };
export const createPublications = (messages, opts) => { var messages_2, messages_2_1; return __awaiter(void 0, void 0, void 0, function* () {
    var e_2, _a;
    const publications = {};
    try {
        for (messages_2 = __asyncValues(messages); messages_2_1 = yield messages_2.next(), !messages_2_1.done;) {
            const message = messages_2_1.value;
            const dsnpType = message.dsnpType;
            if (publications[dsnpType] === undefined) {
                const filteredMessageIterables = filterIterable(messages, (message) => message.dsnpType == dsnpType);
                publications[dsnpType] = createPublication(filteredMessageIterables, opts);
            }
        }
    }
    catch (e_2_1) { e_2 = { error: e_2_1 }; }
    finally {
        try {
            if (messages_2_1 && !messages_2_1.done && (_a = messages_2.return)) yield _a.call(messages_2);
        }
        finally { if (e_2) throw e_2.error; }
    }
    return Promise.all(Object.values(publications));
}); };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3JlYXRlUHVibGljYXRpb24uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvY3JlYXRlUHVibGljYXRpb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7OztBQUNBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxjQUFjLENBQUM7QUFJMUMsT0FBTyxFQUFFLGNBQWMsRUFBdUIsZUFBZSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDeEYsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBVzFELE1BQU0sQ0FBQyxNQUFNLGlCQUFpQixHQUFHLENBQy9CLFFBQXFFLEVBQ3JFLElBQWlCLEVBQ0ssRUFBRTs7SUFDeEIsTUFBTSxRQUFRLEdBQUcsZUFBZSxFQUFFLENBQUM7SUFDbkMsTUFBTSxFQUFFLEdBQUcsRUFBRSxJQUFJLEVBQUUsR0FBRyxNQUFNLFVBQVUsQ0FBQyxRQUFRLEVBQUUsUUFBUSxFQUFFLElBQUksQ0FBQyxDQUFDO0lBQ2pFLElBQUksUUFBUSxDQUFDOztRQUViLEtBQTRCLGFBQUEsY0FBQSxRQUFRLENBQUE7WUFBekIsTUFBTSxPQUFPLHFCQUFBLENBQUE7WUFDdEIsUUFBUSxHQUFHLE9BQU8sQ0FBQyxRQUFRLENBQUM7WUFDNUIsTUFBTTtTQUNQOzs7Ozs7Ozs7SUFFRCxJQUFJLFFBQVEsS0FBSyxTQUFTO1FBQUUsTUFBTSxJQUFJLGVBQWUsRUFBRSxDQUFDO0lBRXhELE9BQU87UUFDTCxRQUFRO1FBQ1IsR0FBRyxFQUFFLEdBQUcsQ0FBQyxRQUFRLEVBQUU7UUFDbkIsSUFBSTtLQUNMLENBQUM7QUFDSixDQUFDLElBQUEsQ0FBQztBQVdGLE1BQU0sQ0FBQyxNQUFNLGtCQUFrQixHQUFHLENBQ2hDLFFBQStDLEVBQy9DLElBQWlCLEVBQ08sRUFBRTs7SUFDMUIsTUFBTSxZQUFZLEdBQXlDLEVBQUUsQ0FBQzs7UUFFOUQsS0FBNEIsYUFBQSxjQUFBLFFBQVEsQ0FBQTtZQUF6QixNQUFNLE9BQU8scUJBQUEsQ0FBQTtZQUN0QixNQUFNLFFBQVEsR0FBRyxPQUFPLENBQUMsUUFBUSxDQUFDO1lBRWxDLElBQUksWUFBWSxDQUFDLFFBQVEsQ0FBQyxLQUFLLFNBQVMsRUFBRTtnQkFDeEMsTUFBTSx3QkFBd0IsR0FBRyxjQUFjLENBQzdDLFFBQVEsRUFDUixDQUFDLE9BQU8sRUFBRSxFQUFFLENBQUMsT0FBTyxDQUFDLFFBQVEsSUFBSSxRQUFRLENBQzFDLENBQUM7Z0JBRUYsWUFBWSxDQUFDLFFBQVEsQ0FBQyxHQUFHLGlCQUFpQixDQUFXLHdCQUF3QixFQUFFLElBQUksQ0FBQyxDQUFDO2FBQ3RGO1NBQ0Y7Ozs7Ozs7OztJQUVELE9BQU8sT0FBTyxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLFlBQVksQ0FBQyxDQUFDLENBQUM7QUFDbEQsQ0FBQyxJQUFBLENBQUMifQ==