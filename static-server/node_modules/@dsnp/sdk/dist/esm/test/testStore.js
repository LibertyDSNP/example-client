var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
export default class TestStore {
    constructor() {
        this.store = {};
    }
    put(targetPath, content) {
        return __awaiter(this, void 0, void 0, function* () {
            this.store[targetPath] = content;
            return new URL(`http://fakestore.org/${targetPath}`);
        });
    }
    putStream(targetPath, callback) {
        return __awaiter(this, void 0, void 0, function* () {
            const buffers = [];
            const writeStream = {
                write: (...args) => {
                    const [chunk, maybeCallback1, maybeCallback2] = args;
                    if (typeof maybeCallback1 === "function")
                        maybeCallback1(null);
                    else if (typeof maybeCallback2 === "function")
                        maybeCallback2(null);
                    buffers.push(chunk);
                    return false;
                },
                end: (...args) => {
                    const [chunkOrFunction, maybeCallback] = args;
                    if (typeof chunkOrFunction === "function") {
                        chunkOrFunction(null);
                    }
                    else {
                        buffers.push(chunkOrFunction);
                        if (typeof maybeCallback === "function")
                            maybeCallback(null);
                    }
                },
            };
            yield callback(writeStream);
            this.store[targetPath] = Buffer.concat(buffers);
            return new URL(`http://fakestore.org/${targetPath}`);
        });
    }
    getStore() {
        return this.store;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGVzdFN0b3JlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3Rlc3QvdGVzdFN0b3JlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUVBLE1BQU0sQ0FBQyxPQUFPLE9BQU8sU0FBUztJQUc1QjtRQUNFLElBQUksQ0FBQyxLQUFLLEdBQUcsRUFBRSxDQUFDO0lBQ2xCLENBQUM7SUFFSyxHQUFHLENBQUMsVUFBa0IsRUFBRSxPQUFnQjs7WUFDNUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxVQUFVLENBQUMsR0FBRyxPQUFPLENBQUM7WUFDakMsT0FBTyxJQUFJLEdBQUcsQ0FBQyx3QkFBd0IsVUFBVSxFQUFFLENBQUMsQ0FBQztRQUN2RCxDQUFDO0tBQUE7SUFFSyxTQUFTLENBQUMsVUFBa0IsRUFBRSxRQUE2Qjs7WUFDL0QsTUFBTSxPQUFPLEdBQWEsRUFBRSxDQUFDO1lBQzdCLE1BQU0sV0FBVyxHQUFHO2dCQUNsQixLQUFLLEVBQUUsQ0FBQyxHQUFHLElBQWUsRUFBVyxFQUFFO29CQUNyQyxNQUFNLENBQUMsS0FBSyxFQUFFLGNBQWMsRUFBRSxjQUFjLENBQUMsR0FBRyxJQUFJLENBQUM7b0JBQ3JELElBQUksT0FBTyxjQUFjLEtBQUssVUFBVTt3QkFBRSxjQUFjLENBQUMsSUFBSSxDQUFDLENBQUM7eUJBQzFELElBQUksT0FBTyxjQUFjLEtBQUssVUFBVTt3QkFBRSxjQUFjLENBQUMsSUFBSSxDQUFDLENBQUM7b0JBQ3BFLE9BQU8sQ0FBQyxJQUFJLENBQUMsS0FBZSxDQUFDLENBQUM7b0JBQzlCLE9BQU8sS0FBSyxDQUFDO2dCQUNmLENBQUM7Z0JBQ0QsR0FBRyxFQUFFLENBQUMsR0FBRyxJQUFlLEVBQUUsRUFBRTtvQkFDMUIsTUFBTSxDQUFDLGVBQWUsRUFBRSxhQUFhLENBQUMsR0FBRyxJQUFJLENBQUM7b0JBQzlDLElBQUksT0FBTyxlQUFlLEtBQUssVUFBVSxFQUFFO3dCQUN6QyxlQUFlLENBQUMsSUFBSSxDQUFDLENBQUM7cUJBQ3ZCO3lCQUFNO3dCQUNMLE9BQU8sQ0FBQyxJQUFJLENBQUMsZUFBeUIsQ0FBQyxDQUFDO3dCQUN4QyxJQUFJLE9BQU8sYUFBYSxLQUFLLFVBQVU7NEJBQUUsYUFBYSxDQUFDLElBQUksQ0FBQyxDQUFDO3FCQUM5RDtnQkFDSCxDQUFDO2FBQ0YsQ0FBQztZQUNGLE1BQU0sUUFBUSxDQUFDLFdBQVcsQ0FBQyxDQUFDO1lBQzVCLElBQUksQ0FBQyxLQUFLLENBQUMsVUFBVSxDQUFDLEdBQUcsTUFBTSxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsQ0FBQztZQUNoRCxPQUFPLElBQUksR0FBRyxDQUFDLHdCQUF3QixVQUFVLEVBQUUsQ0FBQyxDQUFDO1FBQ3ZELENBQUM7S0FBQTtJQUVELFFBQVE7UUFDTixPQUFPLElBQUksQ0FBQyxLQUFLLENBQUM7SUFDcEIsQ0FBQztDQUNGIn0=