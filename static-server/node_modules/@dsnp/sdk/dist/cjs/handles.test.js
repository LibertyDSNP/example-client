"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const config = __importStar(require("./config"));
const handles_1 = require("./handles");
const registry = __importStar(require("./core/contracts/registry"));
const identity_1 = require("./core/contracts/identity");
const sdkTestConfig_1 = require("./test/sdkTestConfig");
const hardhatRPC_1 = require("./test/hardhatRPC");
const matchers_1 = require("./test/matchers");
const identifiers_1 = require("./core/utilities/identifiers");
const createIdentityContract = () => __awaiter(void 0, void 0, void 0, function* () {
    var _a, _b;
    const receipt = yield (yield identity_1.createCloneProxy()).wait();
    const proxyContractEvent = (_a = receipt.events) === null || _a === void 0 ? void 0 : _a.find((event) => event.event === "ProxyCreated");
    return (_b = proxyContractEvent === null || proxyContractEvent === void 0 ? void 0 : proxyContractEvent.args) === null || _b === void 0 ? void 0 : _b[0];
});
describe("handles", () => {
    hardhatRPC_1.setupSnapshot();
    const notTakens = ["not-taken", "not-taken1", "not-taken2"];
    const takens = ["taken", "taken1", "taken2"];
    let provider;
    let signer;
    beforeAll(() => __awaiter(void 0, void 0, void 0, function* () {
        ({ provider, signer } = sdkTestConfig_1.setupConfig());
        yield hardhatRPC_1.snapshotHardhat(provider);
        config.setConfig({ provider, signer });
        const logicAddress = yield createIdentityContract();
        for (const handle of takens) {
            yield (yield registry.register(logicAddress, handle)).wait();
        }
    }));
    afterAll(() => __awaiter(void 0, void 0, void 0, function* () {
        yield hardhatRPC_1.revertHardhat(provider);
    }));
    describe("#isAvailable", () => {
        it("returns true if it is available", () => __awaiter(void 0, void 0, void 0, function* () {
            expect(yield handles_1.isAvailable("not-taken")).toBe(true);
        }));
        it("returns false if it is not available", () => __awaiter(void 0, void 0, void 0, function* () {
            expect(yield handles_1.isAvailable("taken")).toBe(false);
        }));
    });
    describe("#availabilityFilter", () => {
        it("returns all if all are available", () => __awaiter(void 0, void 0, void 0, function* () {
            expect(yield handles_1.availabilityFilter(notTakens)).toEqual(notTakens);
        }));
        it("returns [] if none are available", () => __awaiter(void 0, void 0, void 0, function* () {
            expect(yield handles_1.availabilityFilter(takens)).toEqual([]);
        }));
        it("returns just the not taken ones if mixed", () => __awaiter(void 0, void 0, void 0, function* () {
            const all = ["not-taken", "taken", "not-taken1", "taken1", "taken2", "not-taken2"];
            expect(yield handles_1.availabilityFilter(all)).toEqual(notTakens);
        }));
    });
    describe("#resolveHandle", () => {
        it("is a success pass through", () => __awaiter(void 0, void 0, void 0, function* () {
            const result = yield handles_1.resolveHandle("taken");
            expect(result).not.toBeNull();
            if (result === null)
                throw new Error();
            expect(result.contractAddr).toMatch(matchers_1.EthAddressRegex);
            expect(result.dsnpUserId).toEqual("dsnp://00000000000003e8");
            expect(result.handle).toEqual("taken");
        }));
        it("is a failure pass through", () => __awaiter(void 0, void 0, void 0, function* () {
            const result = yield handles_1.resolveHandle("not-taken");
            expect(result).toBeNull();
        }));
    });
    describe("#resolveId", () => {
        it("returns null for unfound", () => __awaiter(void 0, void 0, void 0, function* () {
            const result = yield handles_1.resolveId("dsnp://0000000000001388");
            expect(result).toBeNull();
        }));
        it("Handles the case of a single event with number", () => __awaiter(void 0, void 0, void 0, function* () {
            const result = yield handles_1.resolveId("dsnp://00000000000003e8");
            expect(result === null || result === void 0 ? void 0 : result.handle).toEqual("taken");
        }));
        it("Handles the case of a single event with hex", () => __awaiter(void 0, void 0, void 0, function* () {
            const result = yield handles_1.resolveId("dsnp://0000000000000" + Number(1001).toString(16));
            expect(result === null || result === void 0 ? void 0 : result.handle).toEqual("taken1");
        }));
        it("Handles the case of multiple events", () => __awaiter(void 0, void 0, void 0, function* () {
            yield registry.changeHandle("taken", "new-taken");
            const result = yield handles_1.resolveId("dsnp://00000000000003e8");
            expect(result === null || result === void 0 ? void 0 : result.handle).toEqual("new-taken");
        }));
    });
    describe("#createRegistration", () => {
        const handle = "flarp";
        const fakeAddress = "0x1Ea32de10D5a18e55DEBAf379B26Cc0c6952B168";
        it("returns a DSNP User Id", () => __awaiter(void 0, void 0, void 0, function* () {
            const dsnpUserId = yield handles_1.createRegistration(fakeAddress, handle);
            const id = identifiers_1.convertDSNPUserIdToBigNumber(dsnpUserId);
            expect(id.toNumber()).toBeGreaterThan(999);
        }));
    });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGFuZGxlcy50ZXN0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2hhbmRsZXMudGVzdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFDQSxpREFBbUM7QUFDbkMsdUNBQTBHO0FBQzFHLG9FQUFzRDtBQUN0RCx3REFBNkQ7QUFDN0Qsd0RBQW1EO0FBQ25ELGtEQUFrRjtBQUVsRiw4Q0FBa0Q7QUFDbEQsOERBQTRFO0FBRTVFLE1BQU0sc0JBQXNCLEdBQUcsR0FBUyxFQUFFOztJQUN4QyxNQUFNLE9BQU8sR0FBRyxNQUFNLENBQUMsTUFBTSwyQkFBZ0IsRUFBRSxDQUFDLENBQUMsSUFBSSxFQUFFLENBQUM7SUFDeEQsTUFBTSxrQkFBa0IsR0FBRyxNQUFBLE9BQU8sQ0FBQyxNQUFNLDBDQUFFLElBQUksQ0FBQyxDQUFDLEtBQUssRUFBRSxFQUFFLENBQUMsS0FBSyxDQUFDLEtBQUssS0FBSyxjQUFjLENBQUMsQ0FBQztJQUMzRixPQUFPLE1BQUEsa0JBQWtCLGFBQWxCLGtCQUFrQix1QkFBbEIsa0JBQWtCLENBQUUsSUFBSSwwQ0FBRyxDQUFDLENBQUMsQ0FBQztBQUN2QyxDQUFDLENBQUEsQ0FBQztBQUVGLFFBQVEsQ0FBQyxTQUFTLEVBQUUsR0FBRyxFQUFFO0lBQ3ZCLDBCQUFhLEVBQUUsQ0FBQztJQUVoQixNQUFNLFNBQVMsR0FBRyxDQUFDLFdBQVcsRUFBRSxZQUFZLEVBQUUsWUFBWSxDQUFDLENBQUM7SUFDNUQsTUFBTSxNQUFNLEdBQUcsQ0FBQyxPQUFPLEVBQUUsUUFBUSxFQUFFLFFBQVEsQ0FBQyxDQUFDO0lBRTdDLElBQUksUUFBMEMsQ0FBQztJQUMvQyxJQUFJLE1BQWMsQ0FBQztJQUVuQixTQUFTLENBQUMsR0FBUyxFQUFFO1FBQ25CLENBQUMsRUFBRSxRQUFRLEVBQUUsTUFBTSxFQUFFLEdBQUcsMkJBQVcsRUFBRSxDQUFDLENBQUM7UUFDdkMsTUFBTSw0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