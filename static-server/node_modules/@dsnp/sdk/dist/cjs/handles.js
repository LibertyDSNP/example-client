"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.isAvailable = exports.availabilityFilter = exports.resolveId = exports.resolveHandle = exports.createRegistration = void 0;
const registry_1 = require("./core/contracts/registry");
const identity_1 = require("./core/contracts/identity");
const contract_1 = require("./core/contracts/contract");
const identifiers_1 = require("./core/utilities/identifiers");
const createRegistration = (addr, handle, opts) => __awaiter(void 0, void 0, void 0, function* () {
    const txn = yield identity_1.createAndRegisterBeaconProxy(addr, handle, opts);
    const receipt = yield txn.wait(1);
    const registerEvent = contract_1.findEvent("DSNPRegistryUpdate", receipt.logs);
    return identifiers_1.convertBigNumberToDSNPUserId(registerEvent.args[0]);
});
exports.createRegistration = createRegistration;
const resolveHandle = (handle, opts) => registry_1.resolveRegistration(handle, opts);
exports.resolveHandle = resolveHandle;
const resolveId = (dsnpUserId, opts) => __awaiter(void 0, void 0, void 0, function* () {
    const registrations = yield registry_1.getDSNPRegistryUpdateEvents({
        dsnpUserId,
    }, opts);
    if (registrations.length === 0)
        return null;
    return registrations[registrations.length - 1];
});
exports.resolveId = resolveId;
const availabilityFilter = (handles, opts) => __awaiter(void 0, void 0, void 0, function* () {
    const availability = yield Promise.all(handles.map((handle) => exports.isAvailable(handle, opts)));
    return handles.filter((_handle, index) => availability[index]);
});
exports.availabilityFilter = availabilityFilter;
const isAvailable = (handle, opts) => __awaiter(void 0, void 0, void 0, function* () {
    return (yield registry_1.resolveRegistration(handle, opts)) === null;
});
exports.isAvailable = isAvailable;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGFuZGxlcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9oYW5kbGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUNBLHdEQUFtSDtBQUNuSCx3REFBeUU7QUFDekUsd0RBQXNEO0FBQ3RELDhEQUF3RjtBQVlqRixNQUFNLGtCQUFrQixHQUFHLENBQ2hDLElBQWUsRUFDZixNQUFjLEVBQ2QsSUFBd0IsRUFDSCxFQUFFO0lBQ3ZCLE1BQU0sR0FBRyxHQUFHLE1BQU0sdUNBQTRCLENBQUMsSUFBSSxFQUFFLE1BQU0sRUFBRSxJQUFJLENBQUMsQ0FBQztJQUNuRSxNQUFNLE9BQU8sR0FBRyxNQUFNLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFFbEMsTUFBTSxhQUFhLEdBQUcsb0JBQVMsQ0FBQyxvQkFBb0IsRUFBRSxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDcEUsT0FBTywwQ0FBNEIsQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDN0QsQ0FBQyxDQUFBLENBQUM7QUFWVyxRQUFBLGtCQUFrQixzQkFVN0I7QUFTSyxNQUFNLGFBQWEsR0FBRyxDQUFDLE1BQWMsRUFBRSxJQUF3QixFQUFnQyxFQUFFLENBQ3RHLDhCQUFtQixDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUMsQ0FBQztBQUR2QixRQUFBLGFBQWEsaUJBQ1U7QUFTN0IsTUFBTSxTQUFTLEdBQUcsQ0FBTyxVQUFzQixFQUFFLElBQXdCLEVBQWdDLEVBQUU7SUFDaEgsTUFBTSxhQUFhLEdBQUcsTUFBTSxzQ0FBMkIsQ0FDckQ7UUFDRSxVQUFVO0tBQ1gsRUFDRCxJQUFJLENBQ0wsQ0FBQztJQUNGLElBQUksYUFBYSxDQUFDLE1BQU0sS0FBSyxDQUFDO1FBQUUsT0FBTyxJQUFJLENBQUM7SUFDNUMsT0FBTyxhQUFhLENBQUMsYUFBYSxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQztBQUNqRCxDQUFDLENBQUEsQ0FBQztBQVRXLFFBQUEsU0FBUyxhQVNwQjtBQVNLLE1BQU0sa0JBQWtCLEdBQUcsQ0FBTyxPQUFpQixFQUFFLElBQXdCLEVBQXFCLEVBQUU7SUFDekcsTUFBTSxZQUFZLEdBQUcsTUFBTSxPQUFPLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQyxNQUFNLEVBQUUsRUFBRSxDQUFDLG1CQUFXLENBQUMsTUFBTSxFQUFFLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUMzRixPQUFPLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQyxPQUFPLEVBQUUsS0FBSyxFQUFFLEVBQUUsQ0FBQyxZQUFZLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQztBQUNqRSxDQUFDLENBQUEsQ0FBQztBQUhXLFFBQUEsa0JBQWtCLHNCQUc3QjtBQVNLLE1BQU0sV0FBVyxHQUFHLENBQU8sTUFBYyxFQUFFLElBQXdCLEVBQW9CLEVBQUU7SUFDOUYsT0FBTyxDQUFDLE1BQU0sOEJBQW1CLENBQUMsTUFBTSxFQUFFLElBQUksQ0FBQyxDQUFDLEtBQUssSUFBSSxDQUFDO0FBQzVELENBQUMsQ0FBQSxDQUFDO0FBRlcsUUFBQSxXQUFXLGVBRXRCIn0=