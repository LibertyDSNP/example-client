"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.sample = exports.randInt = exports.generateBase64String = exports.generateHash = exports.generateUint8Array = exports.generateHexString = exports.addresses = exports.sampleText = void 0;
const sampleTextImport = __importStar(require("./sampleText"));
exports.sampleText = sampleTextImport;
const addressesImport = __importStar(require("./addresses"));
exports.addresses = addressesImport;
const generateHexString = (length) => {
    return "0x" + [...Array(length)].map(() => exports.randInt(16).toString(16)).join("");
};
exports.generateHexString = generateHexString;
const generateUint8Array = (length) => {
    const res = new Uint8Array(length);
    return res.map(() => exports.randInt(256));
};
exports.generateUint8Array = generateUint8Array;
const generateHash = () => {
    return exports.generateHexString(64);
};
exports.generateHash = generateHash;
const generateBase64String = (length) => {
    const randomChars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
    let result = "";
    for (let i = 0; i < length; i++) {
        result += randomChars.charAt(exports.randInt(randomChars.length));
    }
    result += "=";
    return result;
};
exports.generateBase64String = generateBase64String;
const randInt = (max) => {
    return Math.floor(Math.random() * Math.floor(max));
};
exports.randInt = randInt;
const sample = (fromList) => {
    if (fromList.length === 0) {
        throw new Error("cannot sample from an empty list");
    }
    return fromList[Math.floor(Math.random() * fromList.length)];
};
exports.sample = sample;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUVBLCtEQUFpRDtBQUNwQyxRQUFBLFVBQVUsR0FBRyxnQkFBZ0IsQ0FBQztBQUMzQyw2REFBK0M7QUFDbEMsUUFBQSxTQUFTLEdBQUcsZUFBZSxDQUFDO0FBTWxDLE1BQU0saUJBQWlCLEdBQUcsQ0FBQyxNQUFjLEVBQWEsRUFBRTtJQUM3RCxPQUFPLElBQUksR0FBRyxDQUFDLEdBQUcsS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsRUFBRSxDQUFDLGVBQU8sQ0FBQyxFQUFFLENBQUMsQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUM7QUFDaEYsQ0FBQyxDQUFDO0FBRlcsUUFBQSxpQkFBaUIscUJBRTVCO0FBTUssTUFBTSxrQkFBa0IsR0FBRyxDQUFDLE1BQWMsRUFBYyxFQUFFO0lBQy9ELE1BQU0sR0FBRyxHQUFHLElBQUksVUFBVSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQ25DLE9BQU8sR0FBRyxDQUFDLEdBQUcsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxlQUFPLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztBQUNyQyxDQUFDLENBQUM7QUFIVyxRQUFBLGtCQUFrQixzQkFHN0I7QUFLSyxNQUFNLFlBQVksR0FBRyxHQUFjLEVBQUU7SUFDMUMsT0FBTyx5QkFBaUIsQ0FBQyxFQUFFLENBQUMsQ0FBQztBQUMvQixDQUFDLENBQUM7QUFGVyxRQUFBLFlBQVksZ0JBRXZCO0FBUUssTUFBTSxvQkFBb0IsR0FBRyxDQUFDLE1BQWMsRUFBVSxFQUFFO0lBQzdELE1BQU0sV0FBVyxHQUNmLGtFQUFrRSxDQUFDO0lBQ3JFLElBQUksTUFBTSxHQUFHLEVBQUUsQ0FBQztJQUNoQixLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUFFO1FBQy9CLE1BQU0sSUFBSSxXQUFXLENBQUMsTUFBTSxDQUFDLGVBQU8sQ0FBQyxXQUFXLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztLQUMzRDtJQUNELE1BQU0sSUFBSSxHQUFHLENBQUM7SUFDZCxPQUFPLE1BQU0sQ0FBQztBQUNoQixDQUFDLENBQUM7QUFUVyxRQUFBLG9CQUFvQix3QkFTL0I7QUFNSyxNQUFNLE9BQU8sR0FBRyxDQUFDLEdBQVcsRUFBVSxFQUFFO0lBQzdDLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO0FBQ3JELENBQUMsQ0FBQztBQUZXLFFBQUEsT0FBTyxXQUVsQjtBQU9LLE1BQU0sTUFBTSxHQUFHLENBQUksUUFBa0IsRUFBSyxFQUFFO0lBQ2pELElBQUksUUFBUSxDQUFDLE1BQU0sS0FBSyxDQUFDLEVBQUU7UUFDekIsTUFBTSxJQUFJLEtBQUssQ0FBQyxrQ0FBa0MsQ0FBQyxDQUFDO0tBQ3JEO0lBRUQsT0FBTyxRQUFRLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLEdBQUcsUUFBUSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7QUFDL0QsQ0FBQyxDQUFDO0FBTlcsUUFBQSxNQUFNLFVBTWpCIn0=